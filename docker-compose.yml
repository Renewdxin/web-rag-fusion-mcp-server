services:
  # Main RAG MCP Server
  rag-mcp-server:
    build:
      context: .
      target: production
    container_name: rag-mcp-server
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - rag_data:/app/data
      - rag_logs:/app/logs
      - ./documents:/app/documents:ro
    networks:
      - rag-network
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.path.insert(0, '/app'); from config.settings import config; config.validate()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development version with mounted source code
  rag-mcp-dev:
    build:
      context: .
      target: development
    container_name: rag-mcp-dev
    env_file:
      - .env
    volumes:
      - ./src:/app/src
      - ./config:/app/config
      - ./tests:/app/tests
      - ./docs:/app/docs
      - rag_dev_data:/app/dev_data
      - rag_dev_logs:/app/logs
      - ./documents:/app/documents:ro
    networks:
      - rag-network
    profiles:
      - dev
    command: /bin/bash
    stdin_open: true
    tty: true

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: rag-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - rag-network
    profiles:
      - monitoring

  # Grafana for dashboards (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: rag-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - rag-network
    profiles:
      - monitoring

volumes:
  rag_data:
  rag_logs:
  rag_dev_data:
  rag_dev_logs:
  prometheus_data:
  grafana_data:

networks:
  rag-network:
    driver: bridge