# Multi-Provider RAG Server Configuration
# Copy this file to .env and fill in your values

# ===== Required API Keys =====
# OpenAI API Key (for OpenAI provider)
OPENAI_API_KEY=your_openai_api_key_here

# DashScope API Key (for DashScope/Qwen provider)
DASHSCOPE_API_KEY=your_dashscope_api_key_here

# Search API Key (for web search - optional)
# Use Perplexity or Exa API key
SEARCH_API_KEY=your_search_api_key_here

# ===== Embedding Provider Configuration =====
# Choose embedding provider: 'openai' or 'dashscope'
EMBED_PROVIDER=openai

# Embedding model (provider-specific)
# OpenAI: text-embedding-ada-002, text-embedding-3-small, text-embedding-3-large
# DashScope: text-embedding-v1, text-embedding-v2
EMBEDDING_MODEL=text-embedding-3-small

# LLM model for text generation
# OpenAI: gpt-4o-mini, gpt-4, gpt-3.5-turbo
# DashScope: qwen-turbo, qwen-plus, qwen-max
LLM_MODEL=gpt-4o-mini

# ===== Optional API Configuration =====
# OpenAI Base URL (for proxy or DashScope compatibility)
# For DashScope: https://dashscope.aliyuncs.com/compatible-mode/v1
# OPENAI_BASE_URL=https://api.openai.com/v1

# Search Backend: 'perplexity' or 'exa'
SEARCH_BACKEND=perplexity

# ===== Application Configuration =====
# Environment: dev, test, prod
ENVIRONMENT=dev

# Logging level: DEBUG, INFO, WARNING, ERROR
LOG_LEVEL=INFO

# Vector store database path
VECTOR_STORE_PATH=./data/vector_store.db

# Document collection name
COLLECTION_NAME=rag_documents

# ===== Search & Similarity Settings =====
# Similarity threshold (0.0-1.0)
SIMILARITY_THRESHOLD=0.75

# Number of similar documents to retrieve
SIMILARITY_TOP_K=10

# Minimum similarity score for results (0.0-1.0)
SIMILARITY_CUTOFF=0.7

# ===== LlamaIndex Configuration =====
# Text chunk size for processing
CHUNK_SIZE=1024

# Overlap between chunks
CHUNK_OVERLAP=200

# ===== System Settings =====
# Request timeout (seconds)
TIMEOUT_SECONDS=30

# Maximum retry attempts
MAX_RETRIES=3

# Enable rate limiting
ENABLE_RATE_LIMITING=true

# Rate limit: requests per minute
RATE_LIMIT_REQUESTS=100

# Enable metrics collection
ENABLE_PROMETHEUS_METRICS=true

# Use structured logging
USE_LOGURU=true