name: CI/CD Pipeline

on:
  push:
    branches: [ "**" ]  # 所有分支都构建测试
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: "3.12"
  PYTHONDONTWRITEBYTECODE: "1"
  PYTHONUNBUFFERED: "1"

jobs:
  # 构建测试 - 所有分支都运行
  test:
    name: Build & Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run basic tests
      run: |
        python -c "import src.mcp_server; print('✅ MCP server OK')"
        python -c "import src.vector_store; print('✅ Vector store OK')"
        python -c "import src.web_search; print('✅ Web search OK')"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image (test only)
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        load: true
        tags: ragmcp/rag-mcp-server:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker image
      run: |
        docker run --rm ragmcp/rag-mcp-server:test python -c "
import sys
sys.path.insert(0, '/app')
import src.mcp_server, src.vector_store, src.web_search
print('✅ Docker image OK')
"

  # 发布 - 仅在deploy分支推送时运行
  deploy:
    name: Deploy Release
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/deploy' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Build package
      run: |
        python -m pip install --upgrade pip build
        python -m build

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ragmcp/rag-mcp-server:latest
          ragmcp/rag-mcp-server:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max